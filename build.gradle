plugins {
    id 'java'
    id 'application'
    id 'jacoco'
    id 'com.github.johnrengelman.shadow' version '7.1.2'
}

group 'pt.ipp.estg.ed'
version '1.0.0'

repositories {
    mavenCentral()
    flatDir {
        dirs layout.projectDirectory.dir('libs')
    }
}

dependencies {
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.9.2'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.9.2'
    implementation 'com.fasterxml.jackson.core:jackson-core:2.14.2'
    implementation 'com.fasterxml.jackson.core:jackson-databind:2.14.2'
    implementation 'pt.ipp.estg:DataStructures:1.0.0'
}

application {
    mainClass = 'pt.ipp.estg.ed.Core.Main'
}

jar {
    manifest {
        attributes('Main-Class': 'pt.ipp.estg.ed.Main')
        attributes('Author': 'Sérgio Félix & Carlos Leite')
        attributes('Version': '1.0.0')
    }
}

test {
    useJUnitPlatform()
    testLogging.showStandardStreams = true
    testLogging.events("PASSED", "SKIPPED", "FAILED")
}

jacoco {
    toolVersion = "0.8.8"
}

jacocoTestReport {
    reports {
        xml.required = false
        csv.required = false
        html.required = true
        html.outputLocation = file("${buildDir}/reports/jacoco-output")
    }
}

tasks.register("compressJacoco", Zip) {
    from 'build/reports/jacoco-output'
    archiveName 'jacoco-output-' + UUID.randomUUID().toString() + '.zip'
    destinationDir(file('build/artifacts'))
    dependsOn(jacocoTestReport)
}

tasks.register("compressTests", Zip) {
    from 'build/reports/tests/test'
    archiveName 'tests-output-' + UUID.randomUUID().toString() + '.zip'
    destinationDir(file('build/artifacts'))
}

tasks.register("compressSource", Zip) {
    from './'
    exclude 'build/'
    exclude '.gradle/'
    archiveName 'ed-' + UUID.randomUUID().toString() + '.zip'
    destinationDir(file('build/artifacts'))
}

tasks.named('build') {
    finalizedBy('compressSource')
}

tasks.named('test') {
    finalizedBy('jacocoTestReport', 'compressJacoco', 'compressTests')
}

shadowJar {
    destinationDirectory.set(layout.buildDirectory.dir('artifacts'))
}
